# 2. Задача на разжатие массива.

# У каждого фильма есть расписание, по каким дням он идёт в кинотеатрах.
# Для эффективности дни проката хранятся периодами дат.
# Например, прокат фильма проходит с 1 по 7 января,
# а потом показ возобновляется с 15 января по 7 февраля:

from typing import Generator, List, Tuple
from datetime import datetime, timedelta
from dataclasses import dataclass
[
    (datetime(2020, 1, 1), datetime(2020, 1, 7)),
    (datetime(2020, 1, 15), datetime(2020, 2, 7))
]


# Вам дан class Movie.
# Реализуйте у него метод schedule.
# Он будет генерировать дни, в которые показывают фильм.

# Основа:


@dataclass
class Movie:
    title: str
    dates: List[Tuple[datetime, datetime]]

    def schedule(self) -> Generator[datetime, None, None]:
        res = []
        for p in self.dates:
            start = p[0]
            stop = p[1]
            res.extend([start + timedelta(days=idx)
                       for idx in range((stop - start).days + 1)])

        return res


m = Movie('sw', [
    (datetime(2020, 1, 1), datetime(2020, 1, 7)),
    (datetime(2020, 1, 15), datetime(2020, 2, 7)),
    (datetime(2023, 1, 1), datetime(2023, 1, 9))
])

for d in m.schedule():
    print(d)


# Для проверки. Ожидаемый вывод программы:

# 2020-01-01 00:00:00
# 2020-01-02 00:00:00
# 2020-01-03 00:00:00
# 2020-01-04 00:00:00
# 2020-01-05 00:00:00
# 2020-01-06 00:00:00
# 2020-01-07 00:00:00
# 2020-01-15 00:00:00
# 2020-01-16 00:00:00
# 2020-01-17 00:00:00
# 2020-01-18 00:00:00
# 2020-01-19 00:00:00
# 2020-01-20 00:00:00
# 2020-01-21 00:00:00
# 2020-01-22 00:00:00
# 2020-01-23 00:00:00
# 2020-01-24 00:00:00
# 2020-01-25 00:00:00
# 2020-01-26 00:00:00
# 2020-01-27 00:00:00
# 2020-01-28 00:00:00
# 2020-01-29 00:00:00
# 2020-01-30 00:00:00
# 2020-01-31 00:00:00
# 2020-02-01 00:00:00
# 2020-02-02 00:00:00
# 2020-02-03 00:00:00
# 2020-02-04 00:00:00
# 2020-02-05 00:00:00
# 2020-02-06 00:00:00
# 2020-02-07 00:00:00
